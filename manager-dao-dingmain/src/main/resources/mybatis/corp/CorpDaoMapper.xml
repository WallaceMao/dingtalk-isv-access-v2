<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rishiqing.dingtalk.dao.mapper.corp.CorpDao">

    <resultMap type="com.rishiqing.dingtalk.dao.model.corp.CorpDO" id="corpMap">
        <id property="id" column="id"/>
        <result property="gmtCreate" column="gmt_create"/>
        <result property="gmtModified" column="gmt_modified"/>
        <result property="corpId" column="corp_id"/>
        <result property="inviteCode" column="invite_code"/>
        <result property="industry" column="industry"/>
        <result property="corpName" column="corp_name"/>
        <result property="inviteUrl" column="invite_url"/>
        <result property="corpLogoUrl" column="corp_logo_url"/>
        <result property="rsqId" column="rsq_id"/>
        <result property="scopeVersion" column="scope_version"/>
        <association property="creator"
                     columnPrefix="crt_"
                     resultMap="com.rishiqing.dingtalk.dao.mapper.corp.CorpStaffDao.corpStaffMap"/>
    </resultMap>

    <sql id="select-all-fields">
        id,
        gmt_create,
        gmt_modified,
        corp_id,
        invite_code,
        industry,
        corp_name,
        invite_url,
        corp_logo_url,
        rsq_id,
        scope_version
    </sql>

    <insert id="saveOrUpdateCorp" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO isv_corp (gmt_create,
                              gmt_modified,
                              corp_id,
                              invite_code,
                              industry,
                              corp_name,
                              invite_url,
                              corp_logo_url,
                              scope_version)
        VALUES (now(),
                now(),
                #{corpId},
                #{inviteCode},
                #{industry},
                #{corpName},
                #{inviteUrl},
                #{corpLogoUrl},
                #{scopeVersion})
        ON DUPLICATE KEY UPDATE gmt_modified  = now(),
                                invite_code   = #{inviteCode},
                                industry      = #{industry},
                                corp_name     = #{corpName},
                                invite_url    = #{inviteUrl},
                                corp_logo_url = #{corpLogoUrl},
                                scope_version = #{scopeVersion}
    </insert>

    <update id="updateCorpRsqInfo">
        UPDATE isv_corp
        SET rsq_id = #{rsqId}
        WHERE corp_id = #{corpId}
    </update>

    <select id="getCorpByCorpId" resultMap="corpMap">
        SELECT
        <include refid="select-all-fields"/>
        FROM isv_corp
        <![CDATA[
			WHERE corp_id=#{corpId}
		 ]]>
    </select>

    <select id="getCorpById" resultMap="corpMap">
        SELECT
        <include refid="select-all-fields"/>
        FROM isv_corp
        <![CDATA[
			WHERE id=#{id}
		 ]]>
    </select>

    <select id="getCorpListByIdRange" resultMap="corpMap">
        SELECT
        <include refid="select-all-fields"/>
        FROM isv_corp
        <![CDATA[
			WHERE id >= #{fromId} AND id < #{toId}
		 ]]>
    </select>

    <select id="listPageCorpWithCreator" resultMap="corpMap">
        SELECT c.id AS id,
        c.gmt_create AS gmt_create,
        c.gmt_modified AS gmt_modified,
        c.corp_id AS corp_id,
        c.invite_code AS invite_code,
        c.industry AS industry,
        c.corp_name AS corp_name,
        c.invite_url AS invite_url,
        c.corp_logo_url AS corp_logo_url,
        c.rsq_id AS rsq_id,
        s.id AS crt_id,
        a.auth_user_id AS crt_user_id,
        s.`name` AS crt_name,
        s.is_admin AS crt_is_admin,
        s.is_boss AS crt_is_boss,
        s.avatar AS crt_avatar,
        s.rsq_user_id AS crt_rsq_user_id
        FROM `isv_corp_suite_auth` a
        LEFT JOIN `isv_corp` c ON a.corp_id = c.corp_id
        LEFT JOIN `isv_corp_staff` s ON a.corp_id = s.corp_id AND a.auth_user_id = s.user_id
        WHERE 1 = 1
        <if test="clause != null and clause.corpName != null">
            <bind name="corp_name_pattern" value="'%' + clause.corpName + '%'"/>
            AND c.corp_name LIKE #{corp_name_pattern}
        </if>
        <if test="clause != null and clause.startDate != null">
            AND c.gmt_create > #{clause.startDate}
        </if>
        <if test="clause != null and clause.endDate != null">
            <![CDATA[
            AND c.gmt_create < #{clause.endDate}
            ]]>
        </if>
        ORDER BY c.id
        LIMIT #{offset}, #{size}
    </select>
    <select id="countCorp" resultType="java.lang.Long">
        SELECT COUNT(1)
        FROM isv_corp
    </select>
    <select id="countCorpSuiteAuth" resultType="java.lang.Long">
        SELECT COUNT(1)
        FROM `isv_corp_suite_auth` a
        LEFT JOIN `isv_corp` c ON a.corp_id = c.corp_id
        LEFT JOIN `isv_corp_staff` s ON a.corp_id = s.corp_id AND a.auth_user_id = s.user_id
        WHERE 1 = 1
        <if test="clause != null and clause.corpName != null">
            <bind name="corp_name_pattern" value="'%' + clause.corpName + '%'"/>
            AND c.corp_name LIKE #{corp_name_pattern}
        </if>
        <if test="clause != null and clause.startDate != null">
            AND c.gmt_create > #{clause.startDate}
        </if>
        <if test="clause != null and clause.endDate != null">
            <![CDATA[
            AND c.gmt_create < #{clause.endDate}
            ]]>
        </if>
    </select>

    <select id="listCorpBetweenDate" resultMap="corpMap">
        SELECT
            a.id,
            a.corp_id,
            a.industry,
            a.corp_name,
            count( d.user_id ) AS countStaffNum,
            a.gmt_create,
            c.auth_user_id AS crt_user_id,
            b.`name` AS crt_name
        FROM
            isv_corp_suite_auth c
            LEFT JOIN isv_corp a ON a.corp_id = c.corp_id
            LEFT JOIN isv_corp_staff b ON c.corp_id = b.corp_id
            AND c.auth_user_id = b.user_id
            LEFT JOIN isv_corp_staff d ON c.corp_id = d.corp_id
        WHERE
            a.gmt_create BETWEEN #{startDate}
            AND #{endDate}
        GROUP BY
            a.id,
            a.corp_id,
            a.industry,
            a.corp_name,
            a.gmt_create,
            c.auth_user_id,
            b.`name`
        ORDER BY
            a.gmt_create ASC
    </select>
</mapper>